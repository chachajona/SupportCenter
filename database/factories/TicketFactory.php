<?php

declare(strict_types=1);

namespace Database\Factories;

use App\Models\Ticket;
use App\Models\TicketPriority;
use App\Models\TicketStatus;
use App\Models\User;
use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Ticket>
 */
final class TicketFactory extends Factory
{
    protected $model = Ticket::class;

    public function definition(): array
    {
        return [
            'number' => '', // Will be auto-generated by the model
            'subject' => $this->faker->sentence(),
            'description' => $this->faker->paragraph(),
            'priority_id' => TicketPriority::inRandomOrder()->first()?->id ?? 2,
            'status_id' => TicketStatus::inRandomOrder()->first()?->id ?? 1,
            'department_id' => null, // Nullable until departments are properly seeded
            'assigned_to' => null,
            'created_by' => User::factory(),
            'updated_by' => null,
            'due_at' => $this->faker->optional()->dateTimeBetween('now', '+30 days'),
        ];
    }

    public function assigned(): static
    {
        return $this->state(fn (array $attributes) => [
            'assigned_to' => User::factory(),
        ]);
    }

    public function highPriority(): static
    {
        return $this->state(fn (array $attributes) => [
            'priority_id' => TicketPriority::where('level', 3)->first()?->id ?? 3,
        ]);
    }

    public function critical(): static
    {
        return $this->state(fn (array $attributes) => [
            'priority_id' => TicketPriority::where('level', 4)->first()?->id ?? 4,
        ]);
    }

    public function closed(): static
    {
        return $this->state(fn (array $attributes) => [
            'status_id' => TicketStatus::where('is_closed', true)->first()?->id ?? 4,
            'resolved_at' => $this->faker->dateTimeBetween('-7 days', 'now'),
        ]);
    }

    public function overdue(): static
    {
        return $this->state(fn (array $attributes) => [
            'due_at' => $this->faker->dateTimeBetween('-7 days', '-1 day'),
            'status_id' => TicketStatus::where('is_closed', false)->first()?->id ?? 1,
        ]);
    }
}
